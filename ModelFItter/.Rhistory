training = dat[year(dat$date) < 2012,]
testing = dat[(year(dat$date)) > 2011,]
tstrain = ts(training$visitsTumblr)
ts_model <- bats(tstrain)
pred <- forecast(tstrain)
data = read.csv("Desktop/kaggle_result.csv")
library(ggplot2)
View(data)
View(data)
data(iris)
ggplot(data = iris) +
geom_histogram(aes(x = Sepal.Length, y=(..count..)/sum(..count..)),
alpha=0.3, fill ="red",binwidth=2,position="dodge") +
geom_histogram(aes(x = Sepal.Width, y=(..count..)/sum(..count..)),
alpha=0.3,, fill ="green",binwidth=2,position="dodge")
library(reshape2)
iris2 = melt(iris[,1:2])
ggplot(data = iris2) +
geom_histogram(aes(x = value, y=(..count..)/sum(..count..), fill=variable),
alpha=0.3, binwidth=2, position="identity")
g_sat <- ggplot(data=data)
g_sat <- g_sat + geom_histogram(aes(x=name, y=X2018.10.20))
g_sat
names(data)
names(data) <- c("index", "saturday", "sunday", "lin_sat", "lin_sun", "tree_sat", "tree_sun", "pub_id", "publisher", "lgbm_sat", "lgbm_sun", "xg_sat", "xg_sun")
data_sat <- data["publisher", "saturday", "lin_sat", "tree_sat", "lgbm_sat", "xg_sat"]
data_sat <- data[c("publisher", "saturday", "lin_sat", "tree_sat", "lgbm_sat", "xg_sat")]
names(data_sat) <- c("publisher", "truth", "linear", "treee", "lighgbm", "xgboost")
library(reshape2)
long_sat <- melt(data_sat, id.vars=c("publisher"))
long_sat
g_sat <- ggplot(long_sat)
g_sat <- g_sat + geom_histogram(aes(x=long_sat$publisher, y=long_sat$value, col=long_sat$variable))
g_sat
g_sat <- ggplot(long_sat, aes(x=publisher, color=variable))
g_sat <- g_sat + geom_histogram()
g_sat
g_sat <- ggplot(long_sat, aes(x=publisher, color=variable, y=value))
g_sat <- g_sat + geom_histogram()
g_sat
g_sat <- ggplot(long_sat, aes(x=publisher, color=variable, y=value))
g_sat <- g_sat + geom_bar(stat = "identity")
g_sat
View(long_sat)
View(long_sat)
View(long_sat)
g_sat <- ggplot(long_sat, aes(x=publisher, color=variable, y=value))
g_sat <- g_sat + geom_bar(stat = "identity", position="dodge")
g_sat
g_sat <- g_sat + geom_bar(stat = "identity", position="dodge")  + theme(axis.text.x=element_text(angle=90, hjust=1))
g_sat <- g_sat + geom_bar(stat = "identity", position="dodge")
g_sat
View(data_sat)
data$total <- data$saturday + data$sunday
top_10 <- head(data[order(data$total,decreasing = FALSE),], n=10)
top_10
top_10 <- head(data[order(data$total,decreasing = TRUE),], n=10)
top_10
top_10_sat <- top_10[c("publisher", "saturday", "lin_sat", "tree_sat", "lgbm_sat", "xg_sat")]
names(top_10_sat)
names(top_10_sat) <-c("publisher", "turth", "linear", "tree", "light_gbm", "xg_boost")
long_10_sat <- melt(top_10_sat, id.vars = "publisher")
long_10_sat
g_sat <- ggplot(long_sat, aes(x=publisher, color=variable, y=value)) + geom_bar(stat = "identity", position="dodge") + theme(axis.text.x=element_text(angle=90, hjust=1))
g_sat
g_sat <- ggplot(long_10_sat, aes(x=publisher, color=variable, y=value)) + geom_bar(stat = "identity", position="dodge") + theme(axis.text.x=element_text(angle=90, hjust=1))
g_sat
g_sat <- ggplot(long_10_sat, aes(x=publisher, filled=variable, y=value)) + geom_bar(stat = "identity", position="dodge") + theme(axis.text.x=element_text(angle=90, hjust=1))
g_sat
g_sat <- ggplot(long_10_sat, aes(x=publisher, fill=variable, y=value)) + geom_bar(stat = "identity", position="dodge") + theme(axis.text.x=element_text(angle=90, hjust=1))
g_sat
top_10_sat$per_linear <- (top_10_sat$turth- top_10_sat$linear)*100
top_10_sat$per_tree <- (top_10_sat$turth- top_10_sat$tree)*100
top_10_sat$per_light_gbm <- (top_10_sat$turth- top_10_sat$light_gbm)*100
top_10_sat$per_xg_boost <- (top_10_sat$turth- top_10_sat$xg_boost)*100
View(top_10_sat)
View(top_10_sat)
top_10_sat$per_linear <- ((top_10_sat$turth- top_10_sat$linear)/top_10_sat$turth)*100
top_10_sat$per_tree <- ((top_10_sat$turth- top_10_sat$tree)/top_10_sat$turth)*100
top_10_sat$per_light_gbm <- ((top_10_sat$turth- top_10_sat$light_gbm)/top_10_sat$turth)*100
top_10_sat$per_xg_boost <- ((top_10_sat$turth- top_10_sat$xg_boost)/top_10_sat$turth)*100
per_10_sat <- top_10_sat[c("publisher", "per_linear", "per_tree", "per_light_gbm","per_xg_boost")]
names(per_10_sat)
names(per_10_sat) <- c("publisher", "linear", "tree", "light_gbm", "xg_boost")
per_long_sat <- melt(per_10_sat, id.vars = "publisher")
g_sat <- ggplot(per_long_sat, aes(x=publisher, filled=variable, y=value)) + geom_bar(stat = "identity", position="dodge") + theme(axis.text.x=element_text(angle=90, hjust=1))
g_sat
g_sat <- ggplot(per_long_sat, aes(x=publisher, fill=variable, y=value)) + geom_bar(stat = "identity", position="dodge") + theme(axis.text.x=element_text(angle=90, hjust=1))
g_at
g_sat
g_sat <- ggplot(per_long_sat, aes(x=publisher, fill=variable, y=value)) + geom_bar(stat = "identity", position="dodge") + theme(axis.text.x=element_text(angle=90, hjust=1)) + labs(title="Saturday results", y="Deviation in percent")
g_sat
g_sat <- ggplot(per_long_sat, aes(x=publisher, fill=variable, y=value)) + geom_bar(stat = "identity", position="dodge") + theme(axis.text.x=element_text(angle=90, hjust=1)) + labs(title="Saturday results", y="Deviation in percent") + scale_fill_discrete(name="Model type")
g_sat
top_10_sun <- top_10[c("publisher", "sunday", "lin_sun", "tree_sun", "lgbm_sun", "xg_sun")]
top_10_sun$per_linear <- ((top_10_sun$sunday - top_10_sun$lin_sun)/top_10_sun$sunday)*100
top_10_sun$per_tree <- ((top_10_sun$sunday - top_10_sun$tree_sun)/top_10_sun$sunday)*100
top_10_sun$per_light <- ((top_10_sun$sunday - top_10_sun$lgbm_sun)/top_10_sun$sunday)*100
top_10_sun$per_boost <- ((top_10_sun$sunday - top_10_sun$xg_sun)/top_10_sun$sunday)*100
View(top_10_sun)
View(top_10_sun)
per_10_sun <- top_10_sun[c("publisher", "per_linear", "per_tree", "per_light", "per_boost")]
names(per_10_sun)
names(per_10_sun) <- c("publisher", "linear", "tree", "light_gbm", "xg_boost")
long_10_sun <- melt(per_10_sun, id.vars = "publisher")
g_sun <- ggplot(long_10_sun, aes(x=publisher, fill=variable, y=value)) + geom_bar(stat = "identity", position="dodge") + theme(axis.text.x=element_text(angle=90, hjust=1)) + labs(title="Sunday results", y="Deviation in percent") + scale_fill_discrete(name="Model type")
g_sun
View(data)
squared <- (sum((data$satuday - data$tree_sat)**2) + sum((data$sunday- data$tree_sun)**2))
squared/(355*2)
sqrt(squared/(355*2))
squared <- (sum((data$satuday - data$lin_sat)**2) + sum((data$sunday- data$lin_sun)**2))
sqrt(squared/(355*2))
squared <- (sum((data$satuday - data$lgbm_sat)**2) + sum((data$sunday- data$lgbm_sun)**2))
sqrt(squared/(355*2))
squared <- (sum((data$satuday - data$xg_sat)**2) + sum((data$sunday- data$xg_sun)**2))
sqrt(squared/(355*2))
data$per_tree <- ((data$saturday - data$tree_sat)/data$saturday)*100
plot(x=data$saturday, y=data$per_tree)
plot(x=log(data$saturday), y=data$per_tree)
pub <- [17.0, 75.0, 77.0, 92.0, 95.0, 974.0, 978.0, 981.0, 1013.0, 1017.0, 1024.0, 1026.0, 1030.0, 1034.0, 1042.0, 1052.0, 1060.0, 1064.0, 1065.0, 1066.0, 1071.0, 1072.0, 12668.0, 14461.0, 46660.0, 220164.0, 3443133.0, 3443181.0, 3443203.0, 23108525.0, 24531928.0, 25678496.0, 25833363.0, 32258361.0, 34905198.0, 34905555.0, 34906483.0, 34906847.0, 34906914.0, 34907013.0, 35063607.0, 40225366.0, 48649527.0, 77164752.0, 78824113.0, 78828323.0, 78828752.0, 78829167.0, 82374375.0, 83244085.0, 83484213.0, 83596399.0, 83799804.0, 84251754.0, 85299721.0, 87006572.0, 87010187.0, 87182375.0, 87187698.0, 87212049.0, 90466662.0, 90470898.0, 90843783.0, 90881676.0, 94684442.0, 95702967.0, 95709076.0, 99199289.0, 108401644.0, 109977410.0, 117689962.0, 118606479.0, 120533996.0, 120541637.0, 125443563.0, 131239512.0, 131390610.0, 133935167.0, 134392768.0, 134434941.0, 134439310.0, 134454220.0, 134455353.0, 137020295.0, 137419559.0, 138243254.0, 138622717.0, 140018214.0, 140023783.0, 143578548.0, 144794305.0, 144801563.0, 146178613.0, 148584028.0, 149132012.0, 162894415.0, 168742591.0, 174979099.0, 184417658.0, 185262484.0, 186011971.0, 187629273.0, 187862586.0, 190209578.0, 200452393.0, 200700733.0, 200714358.0, 200720638.0, 200723197.0, 200723713.0, 204456659.0, 204498437.0, 205335383.0, 206108811.0, 206195681.0, 207404095.0, 211129690.0, 211953162.0, 212207708.0, 213616422.0, 219263040.0, 219263850.0, 219269552.0, 219270827.0, 219275387.0, 219337506.0, 219343320.0, 219349959.0, 219353128.0, 219354340.0, 224016249.0, 232113508.0, 248119843.0, 266840091.0, 295400799.0, 301491650.0, 312045601.0, 314113015.0, 315344882.0, 315504825.0, 316889165.0, 318038929.0, 319158152.0, 319593743.0, 322119537.0, 322215204.0, 324232423.0, 324802045.0, 324818956.0, 324820450.0, 325006113.0, 325010300.0, 325054648.0, 325669102.0, 327869238.0, 327870972.0, 327874291.0, 327879635.0, 328363455.0, 329121189.0, 329132258.0, 330785140.0, 332150417.0, 333703984.0, 334531378.0, 335692670.0, 337348603.0, 337359013.0, 337591499.0, 338313584.0, 338694235.0, 339115183.0, 339276707.0, 341210482.0, 344291821.0, 404541073.0, 405224140.0, 407037575.0, 408805005.0, 410057809.0, 411060404.0, 411625006.0, 411625108.0, 411625155.0, 411625186.0, 411625188.0, 411625312.0, 411625332.0, 411625517.0, 411625542.0, 411625569.0, 411628755.0, 411628777.0, 414490206.0, 415990873.0, 418668752.0, 418669592.0, 419257946.0, 419265328.0, 420312218.0, 424316869.0, 425107825.0, 426550702.0, 429993583.0, 431101354.0, 431888002.0, 433072346.0, 439613008.0, 445319128.0, 445955129.0, 447315126.0, 449219580.0, 449221292.0, 449538818.0, 450344148.0, 453429658.0, 454128579.0, 454828088.0, 457953887.0, 458570241.0, 458574477.0, 458580681.0, 458581784.0, 458582931.0, 458583330.0, 458591644.0, 458595140.0, 458958653.0, 458959274.0, 462874112.0, 467191845.0, 467880834.0, 471594670.0, 476853300.0, 477807661.0, 478039800.0, 478731224.0, 488990432.0, 500546860.0, 502047357.0, 502093583.0, 502097413.0, 502110375.0, 502139647.0, 502158891.0, 502164071.0, 503806666.0, 503878411.0, 508047511.0, 513702254.0, 516164200.0, 516275185.0, 519953304.0, 537173960.0, 537174426.0, 540076927.0, 544798505.0, 545364960.0, 547219378.0, 547247391.0, 554953417.0, 583303269.0, 594368882.0, 596078955.0, 596205058.0, 599344577.0, 609617623.0, 614522047.0, 623257701.0, 627762336.0, 629902257.0, 633948434.0, 633948521.0, 636772712.0, 637520623.0, 640840759.0, 641375629.0, 641685769.0, 648338033.0, 650873633.0, 656846288.0, 657872102.0, 665201983.0, 676365633.0, 683515133.0, 688868503.0, 688869961.0, 688870381.0, 688870551.0, 690847529.0, 703529402.0, 717579239.0, 730300774.0, 747769689.0, 748454341.0, 756112442.0, 764492707.0, 783008708.0, 790096418.0, 790099265.0, 790099640.0, 798866411.0, 798866525.0, 800449403.0, 801374445.0, 801385713.0, 801387257.0, 803736112.0, 807300209.0, 808184616.0, 809257719.0, 814308791.0, 817541834.0, 823869008.0, 823874162.0, 824627547.0, 824634047.0, 824652807.0, 824652911.0, 824653518.0, 902180290.0, 907203920.0, 907209718.0, 907210214.0, 907212002.0, 907212375.0, 907216885.0, 923317587.0, 936286798.0, 939111711.0, 950262022.0, 951413773.0, 960998910.0, 961001345.0, 961001456.0, 970099626.0, 989181369.0, 990547945.0, 1005647879.0, 1006763869.0, 1014932440.0, 1080.0, 78824410.0, 94202081.0, 419295288.0, 439631729.0, 487224763.0, 502145325.0, 529186481.0, 577166988.0, 640638100.0, 651667188.0, 798862115.0, 919359432.0, 974696319.0]
pub <- [17.0, 75.0, 77.0, 92.0, 95.0, 974.0, 978.0, 981.0, 1013.0, 1017.0, 1024.0, 1026.0, 1030.0, 1034.0, 1042.0, 1052.0, 1060.0, 1064.0, 1065.0, 1066.0, 1071.0, 1072.0, 12668.0, 14461.0, 46660.0, 220164.0, 3443133.0, 3443181.0, 3443203.0, 23108525.0, 24531928.0, 25678496.0, 25833363.0, 32258361.0, 34905198.0, 34905555.0, 34906483.0, 34906847.0, 34906914.0, 34907013.0, 35063607.0, 40225366.0, 48649527.0, 77164752.0, 78824113.0, 78828323.0, 78828752.0, 78829167.0, 82374375.0, 83244085.0, 83484213.0, 83596399.0, 83799804.0, 84251754.0, 85299721.0, 87006572.0, 87010187.0, 87182375.0, 87187698.0, 87212049.0, 90466662.0, 90470898.0, 90843783.0, 90881676.0, 94684442.0, 95702967.0, 95709076.0, 99199289.0, 108401644.0, 109977410.0, 117689962.0, 118606479.0, 120533996.0, 120541637.0, 125443563.0, 131239512.0, 131390610.0, 133935167.0, 134392768.0, 134434941.0, 134439310.0, 134454220.0, 134455353.0, 137020295.0, 137419559.0, 138243254.0, 138622717.0, 140018214.0, 140023783.0, 143578548.0, 144794305.0, 144801563.0, 146178613.0, 148584028.0, 149132012.0, 162894415.0, 168742591.0, 174979099.0, 184417658.0, 185262484.0, 186011971.0, 187629273.0, 187862586.0, 190209578.0, 200452393.0, 200700733.0, 200714358.0, 200720638.0, 200723197.0, 200723713.0, 204456659.0, 204498437.0, 205335383.0, 206108811.0, 206195681.0, 207404095.0, 211129690.0, 211953162.0, 212207708.0, 213616422.0, 219263040.0, 219263850.0, 219269552.0, 219270827.0, 219275387.0, 219337506.0, 219343320.0, 219349959.0, 219353128.0, 219354340.0, 224016249.0, 232113508.0, 248119843.0, 266840091.0, 295400799.0, 301491650.0, 312045601.0, 314113015.0, 315344882.0, 315504825.0, 316889165.0, 318038929.0, 319158152.0, 319593743.0, 322119537.0, 322215204.0, 324232423.0, 324802045.0, 324818956.0, 324820450.0, 325006113.0, 325010300.0, 325054648.0, 325669102.0, 327869238.0, 327870972.0, 327874291.0, 327879635.0, 328363455.0, 329121189.0, 329132258.0, 330785140.0, 332150417.0, 333703984.0, 334531378.0, 335692670.0, 337348603.0, 337359013.0, 337591499.0, 338313584.0, 338694235.0, 339115183.0, 339276707.0, 341210482.0, 344291821.0, 404541073.0, 405224140.0, 407037575.0, 408805005.0, 410057809.0, 411060404.0, 411625006.0, 411625108.0, 411625155.0, 411625186.0, 411625188.0, 411625312.0, 411625332.0, 411625517.0, 411625542.0, 411625569.0, 411628755.0, 411628777.0, 414490206.0, 415990873.0, 418668752.0, 418669592.0, 419257946.0, 419265328.0, 420312218.0, 424316869.0, 425107825.0, 426550702.0, 429993583.0, 431101354.0, 431888002.0, 433072346.0, 439613008.0, 445319128.0, 445955129.0, 447315126.0, 449219580.0, 449221292.0, 449538818.0, 450344148.0, 453429658.0, 454128579.0, 454828088.0, 457953887.0, 458570241.0, 458574477.0, 458580681.0, 458581784.0, 458582931.0, 458583330.0, 458591644.0, 458595140.0, 458958653.0, 458959274.0, 462874112.0, 467191845.0, 467880834.0, 471594670.0, 476853300.0, 477807661.0, 478039800.0, 478731224.0, 488990432.0, 500546860.0, 502047357.0, 502093583.0, 502097413.0, 502110375.0, 502139647.0, 502158891.0, 502164071.0, 503806666.0, 503878411.0, 508047511.0, 513702254.0, 516164200.0, 516275185.0, 519953304.0, 537173960.0, 537174426.0, 540076927.0, 544798505.0, 545364960.0, 547219378.0, 547247391.0, 554953417.0, 583303269.0, 594368882.0, 596078955.0, 596205058.0, 599344577.0, 609617623.0, 614522047.0, 623257701.0, 627762336.0, 629902257.0, 633948434.0, 633948521.0, 636772712.0, 637520623.0, 640840759.0, 641375629.0, 641685769.0, 648338033.0, 650873633.0, 656846288.0, 657872102.0, 665201983.0, 676365633.0, 683515133.0, 688868503.0, 688869961.0, 688870381.0, 688870551.0, 690847529.0, 703529402.0, 717579239.0, 730300774.0, 747769689.0, 748454341.0, 756112442.0, 764492707.0, 783008708.0, 790096418.0, 790099265.0, 790099640.0, 798866411.0, 798866525.0, 800449403.0, 801374445.0, 801385713.0, 801387257.0, 803736112.0, 807300209.0, 808184616.0, 809257719.0, 814308791.0, 817541834.0, 823869008.0, 823874162.0, 824627547.0, 824634047.0, 824652807.0, 824652911.0, 824653518.0, 902180290.0, 907203920.0, 907209718.0, 907210214.0, 907212002.0, 907212375.0, 907216885.0, 923317587.0, 936286798.0, 939111711.0, 950262022.0, 951413773.0, 960998910.0, 961001345.0, 961001456.0, 970099626.0, 989181369.0, 990547945.0, 1005647879.0, 1006763869.0, 1014932440.0, 1080.0, 78824410.0, 94202081.0, 419295288.0, 439631729.0, 487224763.0, 502145325.0, 529186481.0, 577166988.0, 640638100.0, 651667188.0, 798862115.0, 919359432.0, 974696319.0]
pub <- c(17.0, 75.0, 77.0, 92.0, 95.0, 974.0, 978.0, 981.0, 1013.0, 1017.0, 1024.0, 1026.0, 1030.0, 1034.0, 1042.0, 1052.0, 1060.0, 1064.0, 1065.0, 1066.0, 1071.0, 1072.0, 12668.0, 14461.0, 46660.0, 220164.0, 3443133.0, 3443181.0, 3443203.0, 23108525.0, 24531928.0, 25678496.0, 25833363.0, 32258361.0, 34905198.0, 34905555.0, 34906483.0, 34906847.0, 34906914.0, 34907013.0, 35063607.0, 40225366.0, 48649527.0, 77164752.0, 78824113.0, 78828323.0, 78828752.0, 78829167.0, 82374375.0, 83244085.0, 83484213.0, 83596399.0, 83799804.0, 84251754.0, 85299721.0, 87006572.0, 87010187.0, 87182375.0, 87187698.0, 87212049.0, 90466662.0, 90470898.0, 90843783.0, 90881676.0, 94684442.0, 95702967.0, 95709076.0, 99199289.0, 108401644.0, 109977410.0, 117689962.0, 118606479.0, 120533996.0, 120541637.0, 125443563.0, 131239512.0, 131390610.0, 133935167.0, 134392768.0, 134434941.0, 134439310.0, 134454220.0, 134455353.0, 137020295.0, 137419559.0, 138243254.0, 138622717.0, 140018214.0, 140023783.0, 143578548.0, 144794305.0, 144801563.0, 146178613.0, 148584028.0, 149132012.0, 162894415.0, 168742591.0, 174979099.0, 184417658.0, 185262484.0, 186011971.0, 187629273.0, 187862586.0, 190209578.0, 200452393.0, 200700733.0, 200714358.0, 200720638.0, 200723197.0, 200723713.0, 204456659.0, 204498437.0, 205335383.0, 206108811.0, 206195681.0, 207404095.0, 211129690.0, 211953162.0, 212207708.0, 213616422.0, 219263040.0, 219263850.0, 219269552.0, 219270827.0, 219275387.0, 219337506.0, 219343320.0, 219349959.0, 219353128.0, 219354340.0, 224016249.0, 232113508.0, 248119843.0, 266840091.0, 295400799.0, 301491650.0, 312045601.0, 314113015.0, 315344882.0, 315504825.0, 316889165.0, 318038929.0, 319158152.0, 319593743.0, 322119537.0, 322215204.0, 324232423.0, 324802045.0, 324818956.0, 324820450.0, 325006113.0, 325010300.0, 325054648.0, 325669102.0, 327869238.0, 327870972.0, 327874291.0, 327879635.0, 328363455.0, 329121189.0, 329132258.0, 330785140.0, 332150417.0, 333703984.0, 334531378.0, 335692670.0, 337348603.0, 337359013.0, 337591499.0, 338313584.0, 338694235.0, 339115183.0, 339276707.0, 341210482.0, 344291821.0, 404541073.0, 405224140.0, 407037575.0, 408805005.0, 410057809.0, 411060404.0, 411625006.0, 411625108.0, 411625155.0, 411625186.0, 411625188.0, 411625312.0, 411625332.0, 411625517.0, 411625542.0, 411625569.0, 411628755.0, 411628777.0, 414490206.0, 415990873.0, 418668752.0, 418669592.0, 419257946.0, 419265328.0, 420312218.0, 424316869.0, 425107825.0, 426550702.0, 429993583.0, 431101354.0, 431888002.0, 433072346.0, 439613008.0, 445319128.0, 445955129.0, 447315126.0, 449219580.0, 449221292.0, 449538818.0, 450344148.0, 453429658.0, 454128579.0, 454828088.0, 457953887.0, 458570241.0, 458574477.0, 458580681.0, 458581784.0, 458582931.0, 458583330.0, 458591644.0, 458595140.0, 458958653.0, 458959274.0, 462874112.0, 467191845.0, 467880834.0, 471594670.0, 476853300.0, 477807661.0, 478039800.0, 478731224.0, 488990432.0, 500546860.0, 502047357.0, 502093583.0, 502097413.0, 502110375.0, 502139647.0, 502158891.0, 502164071.0, 503806666.0, 503878411.0, 508047511.0, 513702254.0, 516164200.0, 516275185.0, 519953304.0, 537173960.0, 537174426.0, 540076927.0, 544798505.0, 545364960.0, 547219378.0, 547247391.0, 554953417.0, 583303269.0, 594368882.0, 596078955.0, 596205058.0, 599344577.0, 609617623.0, 614522047.0, 623257701.0, 627762336.0, 629902257.0, 633948434.0, 633948521.0, 636772712.0, 637520623.0, 640840759.0, 641375629.0, 641685769.0, 648338033.0, 650873633.0, 656846288.0, 657872102.0, 665201983.0, 676365633.0, 683515133.0, 688868503.0, 688869961.0, 688870381.0, 688870551.0, 690847529.0, 703529402.0, 717579239.0, 730300774.0, 747769689.0, 748454341.0, 756112442.0, 764492707.0, 783008708.0, 790096418.0, 790099265.0, 790099640.0, 798866411.0, 798866525.0, 800449403.0, 801374445.0, 801385713.0, 801387257.0, 803736112.0, 807300209.0, 808184616.0, 809257719.0, 814308791.0, 817541834.0, 823869008.0, 823874162.0, 824627547.0, 824634047.0, 824652807.0, 824652911.0, 824653518.0, 902180290.0, 907203920.0, 907209718.0, 907210214.0, 907212002.0, 907212375.0, 907216885.0, 923317587.0, 936286798.0, 939111711.0, 950262022.0, 951413773.0, 960998910.0, 961001345.0, 961001456.0, 970099626.0, 989181369.0, 990547945.0, 1005647879.0, 1006763869.0, 1014932440.0, 1080.0, 78824410.0, 94202081.0, 419295288.0, 439631729.0, 487224763.0, 502145325.0, 529186481.0, 577166988.0, 640638100.0, 651667188.0, 798862115.0, 919359432.0, 974696319.0)
)
pub <- c(17.0, 75.0, 77.0, 92.0, 95.0, 974.0, 978.0, 981.0, 1013.0, 1017.0, 1024.0, 1026.0, 1030.0, 1034.0, 1042.0, 1052.0, 1060.0, 1064.0, 1065.0, 1066.0, 1071.0, 1072.0, 12668.0, 14461.0, 46660.0, 220164.0, 3443133.0, 3443181.0, 3443203.0, 23108525.0, 24531928.0, 25678496.0, 25833363.0, 32258361.0, 34905198.0, 34905555.0, 34906483.0, 34906847.0, 34906914.0, 34907013.0, 35063607.0, 40225366.0, 48649527.0, 77164752.0, 78824113.0, 78828323.0, 78828752.0, 78829167.0, 82374375.0, 83244085.0, 83484213.0, 83596399.0, 83799804.0, 84251754.0, 85299721.0, 87006572.0, 87010187.0, 87182375.0, 87187698.0, 87212049.0, 90466662.0, 90470898.0, 90843783.0, 90881676.0, 94684442.0, 95702967.0, 95709076.0, 99199289.0, 108401644.0, 109977410.0, 117689962.0, 118606479.0, 120533996.0, 120541637.0, 125443563.0, 131239512.0, 131390610.0, 133935167.0, 134392768.0, 134434941.0, 134439310.0, 134454220.0, 134455353.0, 137020295.0, 137419559.0, 138243254.0, 138622717.0, 140018214.0, 140023783.0, 143578548.0, 144794305.0, 144801563.0, 146178613.0, 148584028.0, 149132012.0, 162894415.0, 168742591.0, 174979099.0, 184417658.0, 185262484.0, 186011971.0, 187629273.0, 187862586.0, 190209578.0, 200452393.0, 200700733.0, 200714358.0, 200720638.0, 200723197.0, 200723713.0, 204456659.0, 204498437.0, 205335383.0, 206108811.0, 206195681.0, 207404095.0, 211129690.0, 211953162.0, 212207708.0, 213616422.0, 219263040.0, 219263850.0, 219269552.0, 219270827.0, 219275387.0, 219337506.0, 219343320.0, 219349959.0, 219353128.0, 219354340.0, 224016249.0, 232113508.0, 248119843.0, 266840091.0, 295400799.0, 301491650.0, 312045601.0, 314113015.0, 315344882.0, 315504825.0, 316889165.0, 318038929.0, 319158152.0, 319593743.0, 322119537.0, 322215204.0, 324232423.0, 324802045.0, 324818956.0, 324820450.0, 325006113.0, 325010300.0, 325054648.0, 325669102.0, 327869238.0, 327870972.0, 327874291.0, 327879635.0, 328363455.0, 329121189.0, 329132258.0, 330785140.0, 332150417.0, 333703984.0, 334531378.0, 335692670.0, 337348603.0, 337359013.0, 337591499.0, 338313584.0, 338694235.0, 339115183.0, 339276707.0, 341210482.0, 344291821.0, 404541073.0, 405224140.0, 407037575.0, 408805005.0, 410057809.0, 411060404.0, 411625006.0, 411625108.0, 411625155.0, 411625186.0, 411625188.0, 411625312.0, 411625332.0, 411625517.0, 411625542.0, 411625569.0, 411628755.0, 411628777.0, 414490206.0, 415990873.0, 418668752.0, 418669592.0, 419257946.0, 419265328.0, 420312218.0, 424316869.0, 425107825.0, 426550702.0, 429993583.0, 431101354.0, 431888002.0, 433072346.0, 439613008.0, 445319128.0, 445955129.0, 447315126.0, 449219580.0, 449221292.0, 449538818.0, 450344148.0, 453429658.0, 454128579.0, 454828088.0, 457953887.0, 458570241.0, 458574477.0, 458580681.0, 458581784.0, 458582931.0, 458583330.0, 458591644.0, 458595140.0, 458958653.0, 458959274.0, 462874112.0, 467191845.0, 467880834.0, 471594670.0, 476853300.0, 477807661.0, 478039800.0, 478731224.0, 488990432.0, 500546860.0, 502047357.0, 502093583.0, 502097413.0, 502110375.0, 502139647.0, 502158891.0, 502164071.0, 503806666.0, 503878411.0, 508047511.0, 513702254.0, 516164200.0, 516275185.0, 519953304.0, 537173960.0, 537174426.0, 540076927.0, 544798505.0, 545364960.0, 547219378.0, 547247391.0, 554953417.0, 583303269.0, 594368882.0, 596078955.0, 596205058.0, 599344577.0, 609617623.0, 614522047.0, 623257701.0, 627762336.0, 629902257.0, 633948434.0, 633948521.0, 636772712.0, 637520623.0, 640840759.0, 641375629.0, 641685769.0, 648338033.0, 650873633.0, 656846288.0, 657872102.0, 665201983.0, 676365633.0, 683515133.0, 688868503.0, 688869961.0, 688870381.0, 688870551.0, 690847529.0, 703529402.0, 717579239.0, 730300774.0, 747769689.0, 748454341.0, 756112442.0, 764492707.0, 783008708.0, 790096418.0, 790099265.0, 790099640.0, 798866411.0, 798866525.0, 800449403.0, 801374445.0, 801385713.0, 801387257.0, 803736112.0, 807300209.0, 808184616.0, 809257719.0, 814308791.0, 817541834.0, 823869008.0, 823874162.0, 824627547.0, 824634047.0, 824652807.0, 824652911.0, 824653518.0, 902180290.0, 907203920.0, 907209718.0, 907210214.0, 907212002.0, 907212375.0, 907216885.0, 923317587.0, 936286798.0, 939111711.0, 950262022.0, 951413773.0, 960998910.0, 961001345.0, 961001456.0, 970099626.0, 989181369.0, 990547945.0, 1005647879.0, 1006763869.0, 1014932440.0, 1080.0, 78824410.0, 94202081.0, 419295288.0, 439631729.0, 487224763.0, 502145325.0, 529186481.0, 577166988.0, 640638100.0, 651667188.0, 798862115.0, 919359432.0, 974696319.0)
)
pub
pub <- c(17, 75, 77, 92, 95, 974, 978, 981, 1013, 1017, 1024, 1026, 1030, 1034, 1042, 1052, 1060, 1064, 1065, 1066, 1071, 1072, 12668, 14461, 46660, 220164, 3443133, 3443181, 3443203, 23108525, 24531928, 25678496, 25833363, 32258361, 34905198, 34905555, 34906483, 34906847, 34906914, 34907013, 35063607, 40225366, 48649527, 77164752, 78824113, 78828323, 78828752, 78829167, 82374375, 83244085, 83484213, 83596399, 83799804, 84251754, 85299721, 87006572, 87010187, 87182375, 87187698, 87212049, 90466662, 90470898, 90843783, 90881676, 94684442, 95702967, 95709076, 99199289, 108401644, 109977410, 117689962, 118606479, 120533996, 120541637, 125443563, 131239512, 131390610, 133935167, 134392768, 134434941, 134439310, 134454220, 134455353, 137020295, 137419559, 138243254, 138622717, 140018214, 140023783, 143578548, 144794305, 144801563, 146178613, 148584028, 149132012, 162894415, 168742591, 174979099, 184417658, 185262484, 186011971, 187629273, 187862586, 190209578, 200452393, 200700733, 200714358, 200720638, 200723197, 200723713, 204456659, 204498437, 205335383, 206108811, 206195681, 207404095, 211129690, 211953162, 212207708, 213616422, 219263040, 219263850, 219269552, 219270827, 219275387, 219337506, 219343320, 219349959, 219353128, 219354340, 224016249, 232113508, 248119843, 266840091, 295400799, 301491650, 312045601, 314113015, 315344882, 315504825, 316889165, 318038929, 319158152, 319593743, 322119537, 322215204, 324232423, 324802045, 324818956, 324820450, 325006113, 325010300, 325054648, 325669102, 327869238, 327870972, 327874291, 327879635, 328363455, 329121189, 329132258, 330785140, 332150417, 333703984, 334531378, 335692670, 337348603, 337359013, 337591499, 338313584, 338694235, 339115183, 339276707, 341210482, 344291821, 404541073, 405224140, 407037575, 408805005, 410057809, 411060404, 411625006, 411625108, 411625155, 411625186, 411625188, 411625312, 411625332, 411625517, 411625542, 411625569, 411628755, 411628777, 414490206, 415990873, 418668752, 418669592, 419257946, 419265328, 420312218, 424316869, 425107825, 426550702, 429993583, 431101354, 431888002, 433072346, 439613008, 445319128, 445955129, 447315126, 449219580, 449221292, 449538818, 450344148, 453429658, 454128579, 454828088, 457953887, 458570241, 458574477, 458580681, 458581784, 458582931, 458583330, 458591644, 458595140, 458958653, 458959274, 462874112, 467191845, 467880834, 471594670, 476853300, 477807661, 478039800, 478731224, 488990432, 500546860, 502047357, 502093583, 502097413, 502110375, 502139647, 502158891, 502164071, 503806666, 503878411, 508047511, 513702254, 516164200, 516275185, 519953304, 537173960, 537174426, 540076927, 544798505, 545364960, 547219378, 547247391, 554953417, 583303269, 594368882, 596078955, 596205058, 599344577, 609617623, 614522047, 623257701, 627762336, 629902257, 633948434, 633948521, 636772712, 637520623, 640840759, 641375629, 641685769, 648338033, 650873633, 656846288, 657872102, 665201983, 676365633, 683515133, 688868503, 688869961, 688870381, 688870551, 690847529, 703529402, 717579239, 730300774, 747769689, 748454341, 756112442, 764492707, 783008708, 790096418, 790099265, 790099640, 798866411, 798866525, 800449403, 801374445, 801385713, 801387257, 803736112, 807300209, 808184616, 809257719, 814308791, 817541834, 823869008, 823874162, 824627547, 824634047, 824652807, 824652911, 824653518, 902180290, 907203920, 907209718, 907210214, 907212002, 907212375, 907216885, 923317587, 936286798, 939111711, 950262022, 951413773, 960998910, 961001345, 961001456, 970099626, 989181369, 990547945, 1005647879, 1006763869, 1014932440, 1080, 78824410, 94202081, 419295288, 439631729, 487224763, 502145325, 529186481, 577166988, 640638100, 651667188, 798862115, 919359432, 974696319)
pub <- c(17, 75, 77, 92, 95, 974, 978, 981, 1013, 1017, 1024, 1026, 1030, 1034, 1042, 1052, 1060, 1064, 1065, 1066, 1071, 1072, 12668, 14461, 46660, 220164, 3443133, 3443181, 3443203, 23108525, 24531928, 25678496, 25833363, 32258361, 34905198, 34905555, 34906483, 34906847, 34906914, 34907013, 35063607, 40225366, 48649527, 77164752, 78824113, 78828323, 78828752, 78829167, 82374375, 83244085, 83484213, 83596399, 83799804, 84251754, 85299721, 87006572, 87010187, 87182375, 87187698, 87212049, 90466662, 90470898, 90843783, 90881676, 94684442, 95702967, 95709076, 99199289, 108401644, 109977410, 117689962, 118606479, 120533996, 120541637, 125443563, 131239512, 131390610, 133935167, 134392768, 134434941, 134439310, 134454220, 134455353, 137020295, 137419559, 138243254, 138622717, 140018214, 140023783, 143578548, 144794305, 144801563, 146178613, 148584028, 149132012, 162894415, 168742591, 174979099, 184417658, 185262484, 186011971, 187629273, 187862586, 190209578, 200452393, 200700733, 200714358, 200720638, 200723197, 200723713, 204456659, 204498437, 205335383, 206108811, 206195681, 207404095, 211129690, 211953162, 212207708, 213616422, 219263040, 219263850, 219269552, 219270827, 219275387, 219337506, 219343320, 219349959, 219353128, 219354340, 224016249, 232113508, 248119843, 266840091, 295400799, 301491650, 312045601, 314113015, 315344882, 315504825, 316889165, 318038929, 319158152, 319593743, 322119537, 322215204, 324232423, 324802045, 324818956, 324820450, 325006113, 325010300, 325054648, 325669102, 327869238, 327870972, 327874291, 327879635, 328363455, 329121189, 329132258, 330785140, 332150417, 333703984, 334531378, 335692670, 337348603, 337359013, 337591499, 338313584, 338694235, 339115183, 339276707, 341210482, 344291821, 404541073, 405224140, 407037575, 408805005, 410057809, 411060404, 411625006, 411625108, 411625155, 411625186, 411625188, 411625312, 411625332, 411625517, 411625542, 411625569, 411628755, 411628777, 414490206, 415990873, 418668752, 418669592, 419257946, 419265328, 420312218, 424316869, 425107825, 426550702, 429993583, 431101354, 431888002, 433072346, 439613008, 445319128, 445955129, 447315126, 449219580, 449221292, 449538818, 450344148, 453429658, 454128579, 454828088, 457953887, 458570241, 458574477, 458580681, 458581784, 458582931, 458583330, 458591644, 458595140, 458958653, 458959274, 462874112, 467191845, 467880834, 471594670, 476853300, 477807661, 478039800, 478731224, 488990432, 500546860, 502047357, 502093583, 502097413, 502110375, 502139647, 502158891, 502164071, 503806666, 503878411, 508047511, 513702254, 516164200, 516275185, 519953304, 537173960, 537174426, 540076927, 544798505, 545364960, 547219378, 547247391, 554953417, 583303269, 594368882, 596078955, 596205058, 599344577, 609617623, 614522047, 623257701, 627762336, 629902257, 633948434, 633948521, 636772712, 637520623, 640840759, 641375629, 641685769, 648338033, 650873633, 656846288, 657872102, 665201983, 676365633, 683515133, 688868503, 688869961, 688870381, 688870551, 690847529, 703529402, 717579239, 730300774, 747769689, 748454341, 756112442, 764492707, 783008708, 790096418, 790099265, 790099640, 798866411, 798866525, 800449403, 801374445, 801385713, 801387257, 803736112, 807300209, 808184616, 809257719, 814308791, 817541834, 823869008, 823874162, 824627547, 824634047, 824652807, 824652911, 824653518, 902180290, 907203920, 907209718, 907210214, 907212002, 907212375, 907216885, 923317587, 936286798, 939111711, 950262022, 951413773, 960998910, 961001345, 961001456, 970099626, 989181369, 990547945, 1005647879, 1006763869, 1014932440, 1080, 78824410, 94202081, 419295288, 439631729, 487224763, 502145325, 529186481, 577166988, 640638100, 651667188, 798862115, 919359432, 974696319)
pub
test <- data[data$pub_id %in% pub]
test <- data[(data$pub_id %in% pub),]
test
plot(x=log(test$saturday), y=test$per_tree)
pub
data_pub <- data[(data$pub_id %in% pub),]
data_pub_sat <- data_pub[c("publisher", "saturday", "lin_sat", "tree_sat", "lgbm_sat", "xg_sat")]
precision <- function(truth, prediction){
diff <- prediction - truth
return((diff/truth)*100)
}
mapply(precision, data_pub_sat$saturday, data_pub_sat$tree_sat)
(8-8)/8
(8-8)/0
8/0
0/0
precision <- function(truth, prediction){
diff <- prediction - truth
return((diff/truth)*100)
}
precision <- function(truth, prediction){
if (truth == 0 and prediction==0){
return(0)
}
if (truth == 0){return (100)}
diff <- prediction - truth
return((diff/truth)*100)
}
precision <- function(truth, prediction){
if (truth == 0) and (prediction==0){
return(0)
}
if (truth == 0){return (100)}
diff <- prediction - truth
return((diff/truth)*100)
}
precision <- function(truth, prediction){
if (truth == 0) and (prediction==0)
return(0)
if (truth == 0)return(100)
diff <- prediction - truth
return((diff/truth)*100)
}
mapply(precision, data_pub_sat$saturday, data_pub_sat$tree_sat)
TRUE and FALSE
TRUE && FALSE
precision <- function(truth, prediction){
if (truth == 0) && (prediction==0)
return(0)
if (truth == 0)return(100)
diff <- prediction - truth
return((diff/truth)*100)
}
precision <- function(truth, prediction){
if (truth == 0 && prediction==0)
return(0)
if (truth == 0) return(100)
diff <- prediction - truth
return((diff/truth)*100)
}
mapply(precision, data_pub_sat$saturday, data_pub_sat$tree_sat)
data_pub_sat["tree"] <- mapply(precision, data_pub_sat$saturday, data_pub_sat$tree_sat)
data_pub_sat["linear"] <- mapply(precision, data_pub_sat$saturday, data_pub_sat$lin_sat)
data_pub_sat["light_gbm"] <- mapply(precision, data_pub_sat$saturday, data_pub_sat$lgbm_sat)
data_pub_sat["xg_boost"] <- mapply(precision, data_pub_sat$saturday, data_pub_sat$xg_sat)
saturday_scatter <- melt(data_pub_sat[c("saturday", "linear", "tree", "light_gbm", "xg_boost"),], id.vars = "saturday")
saturday_scatter
g_scat_sat <- ggplot(data_pub_sat, aes(x=data_pub_sat$saturday))
+ geom_point(data_pub_sat$linear, color="red")
g_scat_sat <- ggplot(data_pub_sat, aes(x=data_pub_sat$saturday))
+ geom_point(aes(y=data_pub_sat$linear), color="red")
g_scat_sat <- ggplot(data_pub_sat, aes(x=data_pub_sat$saturday))
+ geom_point(aes(y=data_pub_sat$linear))
g_scat_sat <- ggplot(data_pub_sat, aes(x=data_pub_sat$saturday))
+ geom_point(aes(y=data_pub_sat$linear))
g_scat_sat <- ggplot(data_pub_sat, aes(x=data_pub_sat$saturday))
g_scat_sat <- g_scat_sat  + geom_point(aes(y=data_pub_sat$linear))
g_scat_sat
data_pub_sat$linear
View(data_pub_sat)
View(data_pub_sat)
g_scat_sat <- ggplot(data=data_pub_sat) + ylim(-210, 210)
g_scat_sat <- geom_point(aes(x=saturday, y=linear, fill="red"))
g_scat_sat
g_scat_sat <- geom_point(aes(x=data_pub_sat$saturday, y=data_pub_sat$linear, fill="red"))
g_scat_sat
g_scat_sat <- ggplot(data=data_pub_sat) + ylim(-210, 210)
g_scat_sat <- geom_point(aes(x=data_pub_sat$saturday, y=data_pub_sat$linear, fill="red"))
g_scat_sat
g_scat_sat <- ggplot(data=data_pub_sat) + ylim(-210, 210)
g_scat_sat
g_scat_sat <- g_scat_sat + geom_point(aes(x=data_pub_sat$saturday, y=data_pub_sat$linear, fill="red"))
g_scat_sat
g_scat_sat <- ggplot(data=data_pub_sat) + ylim(-210, 210)
g_scat_sat <- g_scat_sat + geom_point(aes(x=data_pub_sat$saturday, y=data_pub_sat$linear, color="red"))
g_scat_sat
scatter_saturday <- melt(data_pub_sat[c("publisher", "linear", "tree", "light_gbm", "xg_boost"),], id.vars = "publisher")
scatter_saturday
scatter_saturday <- melt(data_pub_sat[c("publisher", "linear", "tree", "light_gbm", "xg_boost")], id.vars = "publisher")
scatter_saturday
saturday_data <- join(scatter_saturday, data_pub_sat[c("publisher", "saturday")], by="publisher")
saturday_data <- merge(scatter_saturday, data_pub_sat[c("publisher", "saturday")], by="publisher")
saturday_data
g_scat_sat <- ggplot(data=saturday_data) + ylim(-210, 210)
g_scat_sat <- g_scat_sat + geom_point(aes(x=saturday_data$saturday, y=saturday_data$value, fill=saturday_data$variable))
g_scat_sat
g_scat_sat <- ggplot(data=saturday_data) + ylim(-210, 210)
g_scat_sat <- g_scat_sat + geom_point(aes(x=saturday_data$saturday, y=saturday_data$value, color=saturday_data$variable))
g_scat_sat
g_scat_sat <- ggplot(data=data_pub_sat) + ylim(-210, 210)
g_scat_sat <- g_scat_sat + geom_point(aes(x=saturday_data$saturday, y=saturday_data$value, color=saturday_data$variable)) + labs(title="Saturday results", y="Deviation in percent", x="Billable Views")
g_scat_sat
g_scat_sat <- ggplot(data=data_pub_sat) + ylim(-210, 210)
g_scat_sat <- g_scat_sat + geom_point(aes(x=saturday_data$saturday, y=saturday_data$value, color=saturday_data$variable))
g_scat_sat
g_scat_sat <- ggplot(data=saturday_data) + ylim(-210, 210)
g_scat_sat <- g_scat_sat + geom_point(aes(x=saturday_data$saturday, y=saturday_data$value, color=saturday_data$variable))
g_scat_sat
g_scat_sat <- ggplot(data=saturday_data) + ylim(-210, 210)
g_scat_sat <- g_scat_sat + geom_point(aes(x=saturday_data$saturday, y=saturday_data$value, color=saturday_data$variable)) + labs(title="Saturday results", y="Deviation in percent", x="Billable Views") + scale_fill_discrete(name="Model type")
g_scat_sat
data_pub_sun <- data_pub[c("publisher", "saturday", "lin_sat", "tree_sat", "lgbm_sat", "xg_sat")]
data_pub_sun["xg_boost"] <- mapply(precision, data_pub_sun$saturday, data_pub_sun$xg_sat)
data_pub_sun <- data_pub[c("publisher", "sunday", "lin_sun", "tree_sun", "lgbm_sun", "xg_sun")]
data_pub_sun["xg_boost"] <- mapply(precision, data_pub_sun$sunday, data_pub_sun$xg_sun)
data_pub_sun["tree"] <- mapply(precision, data_pub_sun$sunday, data_pub_sun$tree_sun)
data_pub_sun["linear"] <- mapply(precision, data_pub_sun$sunday, data_pub_sun$lin_sun)
data_pub_sun["light_gbm"] <- mapply(precision, data_pub_sun$sunday, data_pub_sun$lgbm_sun)
scatter_sunday <- melt(data_pub_sun[c("publisher", "linear", "tree", "light_gbm", "xg_boost")], id.vars = "publisher")
sunday_data <- merge(scatter_sunday, data_pub_sun[c("publisher", "sunday")], by="publisher")
g_scat_sun <- ggplot(data=sunday_data) + ylim(-210, 210)
g_scat_sun <- g_scat_sun + geom_point(aes(x=sunday_data$saturday, y=sunday_data$value, color=sunday_data$variable)) + labs(title="Sunday results", y="Deviation in percent", x="Billable Views") + scale_fill_discrete(name="Model type")
g_scat_sun
sunday_data
g_scat_sun <- ggplot(data=sunday_data) + ylim(-210, 210)
g_scat_sun <- g_scat_sun + geom_point(aes(x=sunday_data$sunday, y=sunday_data$value, color=sunday_data$variable)) + labs(title="Sunday results", y="Deviation in percent", x="Billable Views") + scale_fill_discrete(name="Model type")
g_scat_sun
g_scat_sat <- ggplot(data=saturday_data) + ylim(-110, 410)
g_scat_sat <- g_scat_sat + geom_point(aes(x=saturday_data$saturday, y=saturday_data$value, color=saturday_data$variable)) + labs(title="Saturday results", y="Deviation in percent", x="Billable Views") + scale_fill_discrete(name="Model type")
g_scat_sat
g_scat_sun <- ggplot(data=sunday_data) + ylim(-110, 410)
g_scat_sun <- g_scat_sun + geom_point(aes(x=sunday_data$sunday, y=sunday_data$value, color=sunday_data$variable)) + labs(title="Sunday results", y="Deviation in percent", x="Billable Views") + scale_fill_discrete(name="Model type")
g_scat_sun
top_10_sat$per_tree <- ((top_10_sat$tree- top_10_sat$turth)/top_10_sat$turth)*100
top_10_sat$per_linear <- ((top_10_sat$linear- top_10_sat$turth)/top_10_sat$turth)*100
top_10_sat$per_light_gbm <- ((top_10_sat$light_gbm- top_10_sat$turth)/top_10_sat$turth)*100
top_10_sat$per_xg_boost <- ((top_10_sat$xg_boost- top_10_sat$turth)/top_10_sat$turth)*100
top_10_sat
per_10_sat <- top_10_sat[c("publisher", "per_linear", "per_tree", "per_light_gbm","per_xg_boost")]
per_long_sat <- melt(per_10_sat, id.vars = "publisher")
g_sat <- ggplot(per_long_sat, aes(x=publisher, fill=variable, y=value)) + geom_bar(stat = "identity", position="dodge") + theme(axis.text.x=element_text(angle=90, hjust=1)) + labs(title="Saturday results", y="Deviation in percent") + scale_fill_discrete(name="Model type")
g_sat
top_10_sun$per_light <- ((top_10_sun$lgbm_sun - top_10_sun$sunday)/top_10_sun$sunday)*100
top_10_sun$per_linear <- ((top_10_sun$lin_sun - top_10_sun$sunday)/top_10_sun$sunday)*100
top_10_sun$per_tree <- ((top_10_sun$tree_sun - top_10_sun$sunday)/top_10_sun$sunday)*100
top_10_sun$per_boost <- ((top_10_sun$xg_sun - top_10_sun$sunday)/top_10_sun$sunday)*100
per_10_sun <- top_10_sun[c("publisher", "per_linear", "per_tree", "per_light", "per_boost")]
names(per_10_sun) <- c("publisher", "linear", "tree", "light_gbm", "xg_boost")
long_10_sun <- melt(per_10_sun, id.vars = "publisher")
g_sun <- ggplot(long_10_sun, aes(x=publisher, fill=variable, y=value)) + geom_bar(stat = "identity", position="dodge") + theme(axis.text.x=element_text(angle=90, hjust=1)) + labs(title="Sunday results", y="Deviation in percent") + scale_fill_discrete(name="Model type")
g_sun
g_scat_sat <- ggplot(data=saturday_data) + ylim(-210, 210)
g_scat_sat <- ggplot(data=saturday_data) + ylim(-110, 410)
g_scat_sat <- g_scat_sat + geom_point(aes(x=saturday_data$saturday, y=saturday_data$value, color=saturday_data$variable)) + labs(title="Saturday results", y="Deviation in percent", x="Billable Views") + scale_fill_discrete(name="Model type")
g_scat_sat
g_scat_sat <- g_scat_sat + scale_fill_discrete(name="Model type")
g_scat_sat
g_scat_sat <- g_scat_sat + scale_color_discrete(name="Model type")
g_scat_sat
g_scat_sat <- g_scat_sat + geom_abline(y=0)
g_scat_sat <- g_scat_sat + geom_abline(slope = 0)
g_scat_sat
g_scat_sat <- ggplot(data=saturday_data) + ylim(-110, 410)
g_scat_sat <- g_scat_sat + geom_point(aes(x=saturday_data$saturday, y=saturday_data$value, color=saturday_data$variable)) + labs(title="Saturday results", y="Deviation in percent", x="Billable Views") + scale_color_discrete(name="Model type") + geom_hline(yintercept = 0)
g_scat_sat
g_scat_sun <- ggplot(data=sunday_data) + ylim(-110, 410)
g_scat_sun <- g_scat_sun + geom_point(aes(x=sunday_data$sunday, y=sunday_data$value, color=sunday_data$variable)) + labs(title="Sunday results", y="Deviation in percent", x="Billable Views") + scale_color_discrete(name="Model type") + geom_hline(yintercept = 0)
g_scat_sun
install.packages("leaflet")
df <- data.frame(lat=33, lng=35)
df %>% leaflet() %>% addTiles()
library(leaflet)
df %>% leaflet() %>% addTiles()
addTiles(leaflet(df))
leaflet(addTiles(df))
leaflet(addTiles(df))
addTiles(leaflet(df()))
leaflet(df) %>% addTiles()
df <- data.frame(lat=33, lng=35)
df %>% leaflet() %>% addTiles()
library(leaflet)
df %>% leaflet() %>% addTiles()
point_df <- data.frame('lat' = c(52.516231,
52.520803,
53.549853,
47.557610,
51.799742,
50.941326,
54.162779,
51.490034),
'lng' = c(13.377724,
13.409269,
9.965406,
10.749597,
10.615730,
6.957722,
11.940504,
7.041685))
point_df
datasets::ChickWeight
install.packages("plotly")
library(plotly)
plot_ly(ChickWeight, type="scatter")
df <- ChickWeight
plot_ly(data=df, x=Time, y=weight, mode="markers", color = Chick)
plot_ly(data=df, x=df$Time, y=df$weight, mode="markers", color = Chick)
plot_ly(data=df, x=df$Time, y=df$weight, mode="markers", color = df$Chick)
plot_ly(data=df, x=df$Time, y=df$weight, color = df$Chick)
plot_ly(data=df, x=df$Time, y=df$weight, color = df$Chick, trace="line")
plot_ly(data=df, x=df$Time, y=df$weight, color = df$Chick, mode="line")
plot_ly(data=df, x=df$Time, y=df$weight, color = df$Diet, mode="line")
datasets::HairEyeColor
datasets::InsectSprays
datasets::Orange
df <- Orange
plot_ly(data=df, x=df$age, y=df$circumference, color = df$Tree, mode="line")
help(plot_ly)
plot_ly(data=df, x=df$age, y=df$circumference, color = df$Tree, mode="line")
%>% layout(title="Circumference of Orange Trees")
df <- Orange
text_creator <- function(x, y){
paste('Tree:', x, '<br> Circumference:', y)
}
text_creator <- function(df, x, y){
paste('Tree:', df$x, '<br> Circumference:', df$y)
}
text_creator <- function(x){
paste('Tree:', x[1], '<br> Circumference:', x[3])
}
apply(df, margin=1, FUN=text_creator)
apply(df, 1, FUN=text_creator)
shiny::runApp('Documents/GitHub/ShinyProject/ModelFItter')
ccjgdvwlusazdGÖIADZG
datasets["mtcars"]
test <- "mtcars"
datasets::test
datasets[test]
datasets$test
load(test)
datasets::test
names(datasets)
test <- "1"
bla <- swith(test, "1"= "Es funktioniert", "2"= "Das war test nummer zwei", "3"= 1+1)
bla <- switch(test, "1"= "Es funktioniert", "2"= "Das war test nummer zwei", "3"= 1+1)
bla
test <- 2
bla <- switch(test, "1"= "Es funktioniert", "2"= "Das war test nummer zwei", "3"= 1+1)
bla
test <- 3
bla <- switch(test, "1"= "Es funktioniert", "2"= "Das war test nummer zwei", "3"= 1+1)
bla
if (x){print("Sollte ich nicht lesen können")}
runApp()
getwd()
setwd("~/Documents/GitHub/ShinyProject/ModelFItter")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
datasets::ChickWeight
names(datasets::ChickWeight)
runApp()
typeof(datasets::ChickWeight)
typeof(datasets::mtcars)
typeof(mtcars)
typeof(ChickWeight)
trial <- c(1,2,3,4,5)
trial - c(1,2)
trial - c(1,2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
type(iris$Species)
typeof(iris$Species)
Species
iris$Species
is.factor(iris$Species)
is.factor(iris$Sepal.Length)
is.factor(iris$Sepal.Length)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
test <- "Species"
data_f <- iris
data_f[test]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
mtcars["mog"]
mtcars["mpg"]
runApp()
runApp()
runApp()
c(1,2)
as.character(c(1,2))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
is.factor(iris["Species"])
test <- "Species"
iris$test
is.factor(iris[[test]])
iris[[test]]
runApp()
