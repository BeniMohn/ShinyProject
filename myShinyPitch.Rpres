Modelfitter
========================================================
author: Benjamin Mohn
date: 29th January 2019
autosize: true
font-import: https://fonts.googleapis.com/css?family=Courgette
font-family: 'Courgette'


A app to fit any model you want


Inputs
========================================================
The user is ask to do 5 inputs. They all are shown below, in brackets it is stated what kind of input it is. 

1. Select a data set 1 out of 7 (drop down)  
2. Select one or two x variable used as predictors (check box)
3. Select one y variable to predict (radio button)
4. Select a model 1 out of 5 (radio botton)
5. Start calculation (button)


    
Specials
========================================================
### data set selection:

Possibiltioes for features and regressor are updated

### x vars selected:   

Selected featues are excluded from regressor choices and text on top is updated.

### y var selected: 

Depending on choice the model selection is updated
Distinguishing Classification and Regression.

### model selected: 

The model selected does not have a impact on the selections. 

Outputs
========================================================
Output for **mtcars**, x = **hp** & **wt**, y = **mpg**, **lm**

```{r modelfit, echo=FALSE}
require(caret)
model_fit <- train(mtcars[c("hp", "wt")], mtcars$mpg, method = "lm")
```

```{r first, echo=FALSE}
model_fit$results
```

```{r second, echo=FALSE}
model_fit$finalModel
```

Plots
========================================================

```{r third, echo=FALSE, fig.width=12, fig.height=2.3}
### Third output
difference <- (predict.train(model_fit) - mtcars$mpg)
plot(
     x=mtcars$mpg, y=difference, main = "Residual Plot",
     xlab = "Regressor", ylab = "Residual"
     )
abline(h=0, col="red")
```
```{r plot1, echo=FALSE, fig.width=12, fig.height=2.3, warning=FALSE, message=FALSE, error=FALSE}
data_set <- iris
predictors <- c("Sepal.Length", "Petal.Width")
model_fit <- train(iris[predictors], data_set$Species, method = "lda")
predictions <- predict.train(model_fit)
col_code <- predictions == data_set$Species
plot(data_set[predictors], col=as.factor(col_code), main= "Plot of predictions")
legend("topright",legend = c("Correct", "Wrong"), col=c(2,1), cex=1, pch=1)
```
```{r plot2, echo=FALSE, fig.width=12, fig.height=2.3}
data_set <- iris
predictors <- "Sepal.Length"
model_fit <- train(iris[predictors], data_set$Species)
predictions <- predict.train(model_fit)
col_code <- predictions == data_set$Species
groups <- max(length(predictions)/10,2)
plot_data <- cut(data_set[[predictors]], breaks = groups)
matrix <- table(col_code, plot_data)
final_plot <- barplot(matrix, col=c("red", "black"),
                      main="Plot of predictions",
                      legend.text = c("Wrong", "Correct"),
                      xlab = "Predictor Variable",
                      ylab = "Count of predictions"
)
```